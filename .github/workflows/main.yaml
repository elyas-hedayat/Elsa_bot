name: CI/CD for Python Application with Darkube

on:
  push:
    branches:
      - '*'  # Triggers on pushes to any branch
  pull_request:
    branches:
      - main  # Triggers on pull requests targeting main

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'  # Specify your desired Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/base.txt  # Ensure you have a requirements.txt file

      - name: Run
        run: |
          python main.py

  darkube_build_elsabot_elyashedayayt1380_hamravesh-c13:

    container:
      image: hamravesh/darkube-cli:v1.1
      options: --user root
    env:
      IMAGE_NAME: registry.hamdocker.ir/elyashedayayt1380/elsabot
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Darkube CLI Build & Push
        run: |
          darkube build --push \
            -t $IMAGE_NAME:${GITHUB_SHA:0:7} \
            -t $IMAGE_NAME:${GITHUB_REF_NAME} \
            --docker-auth-config ${{ secrets.DOCKER_AUTH_CONFIG }} \
            --workdir . --file ./docker/Dockerfile \
            --build-context .

  darkube_deploy_elsabot_elyashedayayt1380_hamravesh-c13:

    container:
      image: hamravesh/darkube-cli:v1.1
    needs: darkube_build_elsabot_elyashedayayt1380_hamravesh-c13
    runs-on: ubuntu-latest
    steps:
      - name: Darkube CLI Deploy
        run: |
          darkube deploy --token ${{ secrets.DEPLOY_TOKEN_ELSABOT_ELYASHEDAYAYT1380_HAMRAVESH_C13 }} \
          --app-id ${{ secrets.APP_ID_ELSABOT_ELYASHEDAYAYT1380_HAMRAVESH_C13 }} \
          --image-tag ${GITHUB_SHA:0:7} \
          --job-id ${GITHUB_RUN_ID}

  merge:

    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' && github.event.action == 'opened' && needs.test.outcome == 'success'

    steps:
      - name: Merge Pull Request
        uses: KeisukeYamashita/auto-pull-request-merge@v1
        with:
          checkStatus: true
          timeoutSeconds: 60
          strategy: merge  # Can be 'merge', 'squash', or 'rebase'
